colSums(is.na(train))[colSums(is.na(train)) > 0]
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
# train$LotFrontage[is.na(train$LotFrontage)] = mean(train$LotFrontage, na.rm = TRUE)
# train$MasVnrArea[is.na(train$MasVnrArea)]   = mean(train$MasVnrArea, na.rm = TRUE)
colSums(is.na(train))[colSums(is.na(train)) > 0]
min(train$MasVnrArea, na.rm=T)
knitr::opts_chunk$set(echo = TRUE, comment = "")
setwd("~/kaggle/house/")
rm(list=ls())
library(tidyverse)
library(forcats) # fct_explicit_na()
library(caret) # trainControl()
library(splines)
library(glmnet) # ridge and lasso
train = read_csv("train.csv",
col_types = cols(.default      = col_factor(),
LotFrontage   = col_double(),
LotArea       = col_double(),
YearBuilt     = col_double(),
YearRemodAdd  = col_double(),
MasVnrArea    = col_double(),
BsmtFinSF1    = col_double(),
BsmtFinSF2    = col_double(),
BsmtUnfSF     = col_double(),
TotalBsmtSF   = col_double(),
"1stFlrSF"    = col_double(),
"2ndFlrSF"    = col_double(),
LowQualFinSF  = col_double(),
GarageYrBlt   = col_double(),
GrLivArea     = col_double(),
BsmtFullBath  = col_double(),
BsmtHalfBath  = col_double(),
FullBath      = col_double(),
HalfBath      = col_double(),
BedroomAbvGr  = col_double(),
KitchenAbvGr  = col_double(),
TotRmsAbvGrd  = col_double(),
Fireplaces    = col_double(),
GarageCars    = col_double(),
GarageArea    = col_double(),
WoodDeckSF    = col_double(),
OpenPorchSF   = col_double(),
EnclosedPorch = col_double(),
"3SsnPorch"   = col_double(),
ScreenPorch   = col_double(),
PoolArea      = col_double(),
MiscVal       = col_double(),
MoSold        = col_double(),
YrSold        = col_double()))
colSums(is.na(train))[colSums(is.na(train)) > 0]
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
#train$GarageYrBlt = fct_explicit_na(train$GarageYrBlt, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
# train$LotFrontage[is.na(train$LotFrontage)] = mean(train$LotFrontage, na.rm = TRUE)
# train$MasVnrArea[is.na(train$MasVnrArea)]   = mean(train$MasVnrArea, na.rm = TRUE)
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
# train$LotFrontage[is.na(train$LotFrontage)] = mean(train$LotFrontage, na.rm = TRUE)
# train$MasVnrArea[is.na(train$MasVnrArea)]   = mean(train$MasVnrArea, na.rm = TRUE)
colSums(is.na(train))[colSums(is.na(train)) > 0]
colSums(is.na(train))[colSums(is.na(train)) > 0]
min(train$LotFrontage)
min(train$LotFrontage, na.rm=T)
min(train$LotFrontage, na.rm = TRUE)
min(train$MasVnrArea, na.rm=T)
table(train$MasVnrArea, na.rm=T)
table(train$MasVnrArea)
read_csv("test.csv") %>% View()
read_csv("test.csv") %>% select(Electrical)
tt = read_csv("test.csv") %>% select(Electrical)
tt
is.na(tt)
sum(is.na(tt))
table(train$Electrical)
train %>% filter(is.na(Electrical))
train %>% filter(is.na(Electrical)) %>% View()
train %>% filter(is.na(Electrical))
train$LotArea
mean(train$LotArea)
sd(train$LotArea)
mean(train$SalePrice)
knitr::opts_chunk$set(echo = TRUE, comment = "")
setwd("~/kaggle/house/")
rm(list=ls())
library(tidyverse)
library(forcats) # fct_explicit_na()
library(caret) # trainControl()
library(splines)
library(glmnet) # ridge and lasso
train = read_csv("train.csv",
col_types = cols(.default      = col_factor(),
LotFrontage   = col_double(),
LotArea       = col_double(),
YearBuilt     = col_double(),
YearRemodAdd  = col_double(),
MasVnrArea    = col_double(),
BsmtFinSF1    = col_double(),
BsmtFinSF2    = col_double(),
BsmtUnfSF     = col_double(),
TotalBsmtSF   = col_double(),
"1stFlrSF"    = col_double(),
"2ndFlrSF"    = col_double(),
LowQualFinSF  = col_double(),
GarageYrBlt   = col_double(),
GrLivArea     = col_double(),
BsmtFullBath  = col_double(),
BsmtHalfBath  = col_double(),
FullBath      = col_double(),
HalfBath      = col_double(),
BedroomAbvGr  = col_double(),
KitchenAbvGr  = col_double(),
TotRmsAbvGrd  = col_double(),
Fireplaces    = col_double(),
GarageCars    = col_double(),
GarageArea    = col_double(),
WoodDeckSF    = col_double(),
OpenPorchSF   = col_double(),
EnclosedPorch = col_double(),
"3SsnPorch"   = col_double(),
ScreenPorch   = col_double(),
PoolArea      = col_double(),
MiscVal       = col_double(),
MoSold        = col_double(),
YrSold        = col_double(),
SalePrice     = col_double()))
dim(train)
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
colSums(is.na(train))[colSums(is.na(train)) > 0]
min(train$LotFrontage, na.rm = TRUE)
train$LotFrontage[is.na(train$LotFrontage)] = 0
train$MasVnrArea[is.na(train$MasVnrArea)] = 0
train %>% filter(is.na(Electrical))
train %>% filter(YearBuilt > 2000)
train %>% filter(YearBuilt > 2000) %>% group_by(Electrical)
train %>% filter(YearBuilt > 2000) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1990) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1930) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1950) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1970) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(n())
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(Count=n())
train$Electrical[is.na(train$Electrical)] = as.factor("SBrkr")
train[1380,]
train[1380,] %>% View()
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(Count=n())
knitr::opts_chunk$set(echo = TRUE, comment = "")
setwd("~/kaggle/house/")
rm(list=ls())
library(tidyverse)
library(forcats) # fct_explicit_na()
library(caret) # trainControl()
library(splines)
library(glmnet) # ridge and lasso
train = read_csv("train.csv",
col_types = cols(.default      = col_factor(),
LotFrontage   = col_double(),
LotArea       = col_double(),
YearBuilt     = col_double(),
YearRemodAdd  = col_double(),
MasVnrArea    = col_double(),
BsmtFinSF1    = col_double(),
BsmtFinSF2    = col_double(),
BsmtUnfSF     = col_double(),
TotalBsmtSF   = col_double(),
"1stFlrSF"    = col_double(),
"2ndFlrSF"    = col_double(),
LowQualFinSF  = col_double(),
GarageYrBlt   = col_double(),
GrLivArea     = col_double(),
BsmtFullBath  = col_double(),
BsmtHalfBath  = col_double(),
FullBath      = col_double(),
HalfBath      = col_double(),
BedroomAbvGr  = col_double(),
KitchenAbvGr  = col_double(),
TotRmsAbvGrd  = col_double(),
Fireplaces    = col_double(),
GarageCars    = col_double(),
GarageArea    = col_double(),
WoodDeckSF    = col_double(),
OpenPorchSF   = col_double(),
EnclosedPorch = col_double(),
"3SsnPorch"   = col_double(),
ScreenPorch   = col_double(),
PoolArea      = col_double(),
MiscVal       = col_double(),
MoSold        = col_double(),
YrSold        = col_double(),
SalePrice     = col_double()))
dim(train)
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageQual = fct_explicit_na(train$GarageQual, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
colSums(is.na(train))[colSums(is.na(train)) > 0]
min(train$LotFrontage, na.rm = TRUE)
train$LotFrontage[is.na(train$LotFrontage)] = 0
train$MasVnrArea[is.na(train$MasVnrArea)] = 0
train %>% filter(is.na(Electrical))
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(Count=n())
train$Electrical[is.na(train$Electrical)] = as.factor("SBrkr")
knitr::opts_chunk$set(echo = TRUE, comment = "")
setwd("~/kaggle/house/")
rm(list=ls())
library(tidyverse)
library(forcats) # fct_explicit_na()
library(caret) # trainControl()
library(splines)
library(glmnet) # ridge and lasso
train = read_csv("train.csv",
col_types = cols(.default      = col_factor(),
LotFrontage   = col_double(),
LotArea       = col_double(),
YearBuilt     = col_double(),
YearRemodAdd  = col_double(),
MasVnrArea    = col_double(),
BsmtFinSF1    = col_double(),
BsmtFinSF2    = col_double(),
BsmtUnfSF     = col_double(),
TotalBsmtSF   = col_double(),
"1stFlrSF"    = col_double(),
"2ndFlrSF"    = col_double(),
LowQualFinSF  = col_double(),
GarageYrBlt   = col_double(),
GrLivArea     = col_double(),
BsmtFullBath  = col_double(),
BsmtHalfBath  = col_double(),
FullBath      = col_double(),
HalfBath      = col_double(),
BedroomAbvGr  = col_double(),
KitchenAbvGr  = col_double(),
TotRmsAbvGrd  = col_double(),
Fireplaces    = col_double(),
GarageCars    = col_double(),
GarageArea    = col_double(),
WoodDeckSF    = col_double(),
OpenPorchSF   = col_double(),
EnclosedPorch = col_double(),
"3SsnPorch"   = col_double(),
ScreenPorch   = col_double(),
PoolArea      = col_double(),
MiscVal       = col_double(),
MoSold        = col_double(),
YrSold        = col_double(),
SalePrice     = col_double()))
dim(train)
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageFinish = fct_explicit_na(train$GarageFinish, "None")
train$GarageQual = fct_explicit_na(train$GarageQual, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
colSums(is.na(train))[colSums(is.na(train)) > 0]
```{r lot.frontage}
min(train$LotFrontage, na.rm = TRUE)
train$LotFrontage[is.na(train$LotFrontage)] = 0
train$MasVnrArea[is.na(train$MasVnrArea)] = 0
train %>% filter(is.na(Electrical))
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(Count=n())
train$Electrical[is.na(train$Electrical)] = as.factor("SBrkr")
install.packages("randomForest")
library(randomForest)
train %>% select(-SalePrice)
rfImpute(train %>% select(-SalePrice), train$SalePrice)
glimpse(train)
knitr::opts_chunk$set(echo = TRUE, comment = "")
setwd("~/kaggle/house/")
rm(list=ls())
library(tidyverse)
library(forcats) # fct_explicit_na()
library(caret) # trainControl()
library(splines)
library(glmnet) # ridge and lasso
train = read_csv("train.csv",
col_types = cols(.default      = col_factor(),
Id            = col_integer(),
LotFrontage   = col_double(),
LotArea       = col_double(),
YearBuilt     = col_double(),
YearRemodAdd  = col_double(),
MasVnrArea    = col_double(),
BsmtFinSF1    = col_double(),
BsmtFinSF2    = col_double(),
BsmtUnfSF     = col_double(),
TotalBsmtSF   = col_double(),
"1stFlrSF"    = col_double(),
"2ndFlrSF"    = col_double(),
LowQualFinSF  = col_double(),
GarageYrBlt   = col_double(),
GrLivArea     = col_double(),
BsmtFullBath  = col_double(),
BsmtHalfBath  = col_double(),
FullBath      = col_double(),
HalfBath      = col_double(),
BedroomAbvGr  = col_double(),
KitchenAbvGr  = col_double(),
TotRmsAbvGrd  = col_double(),
Fireplaces    = col_double(),
GarageCars    = col_double(),
GarageArea    = col_double(),
WoodDeckSF    = col_double(),
OpenPorchSF   = col_double(),
EnclosedPorch = col_double(),
"3SsnPorch"   = col_double(),
ScreenPorch   = col_double(),
PoolArea      = col_double(),
MiscVal       = col_double(),
MoSold        = col_double(),
YrSold        = col_double(),
SalePrice     = col_double()))
# According to the data description, the "NA" values for the the features below represent a value
# na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
#                "BsmtExposure", "BsmtFinType1", "BsmtFinType2",
#                "FireplaceQu", "GarageType", "GarageYrBlt",
#                "GarageCond", "PoolQC", "Fence", "MiscFeature")
train$Alley = fct_explicit_na(train$Alley, "None")
train$MasVnrType = fct_explicit_na(train$MasVnrType, "None")
train$BsmtQual = fct_explicit_na(train$BsmtQual, "None")
train$BsmtCond = fct_explicit_na(train$BsmtCond, "None")
train$BsmtExposure = fct_explicit_na(train$BsmtExposure, "None")
train$BsmtFinType1 = fct_explicit_na(train$BsmtFinType1, "None")
train$BsmtFinType2 = fct_explicit_na(train$BsmtFinType2, "None")
train$FireplaceQu = fct_explicit_na(train$FireplaceQu, "None")
train$GarageType = fct_explicit_na(train$GarageType, "None")
train$GarageFinish = fct_explicit_na(train$GarageFinish, "None")
train$GarageQual = fct_explicit_na(train$GarageQual, "None")
train$GarageCond = fct_explicit_na(train$GarageCond, "None")
train$PoolQC = fct_explicit_na(train$PoolQC, "None")
train$Fence = fct_explicit_na(train$Fence, "None")
train$MiscFeature = fct_explicit_na(train$MiscFeature, "None")
train
colSums(is.na(train))[colSums(is.na(train)) > 0]
min(train$LotFrontage, na.rm = TRUE)
train$LotFrontage[is.na(train$LotFrontage)] = 0
train$MasVnrArea[is.na(train$MasVnrArea)] = 0
train %>% filter(is.na(Electrical))
train %>% filter(YearBuilt > 1995) %>% group_by(Electrical) %>% summarise(Count=n())
train$Electrical[is.na(train$Electrical)] = as.factor("SBrkr")
rfImpute(train%>%select(-SalePrice), train$SalePrice)
rfImpute(train%>%select(-SalePrice), train$SalePrice, iter = 2, ntree = 150)
library(DMwR)
install.packages("DMwR")
library(DMwR)
knn.output = knnImputation(train[, !names(train) %in% "SalePrice"])  # perform knn imputation.
train[, !names(train) %in% "SalePrice"]
train %>% select(-SalePrice) %>% as.matrix()
knn.output = knnImputation(train %>% select(-SalePrice) %>% as.matrix())  # perform knn imputation.
According to the data description, the "NA" values for the the features below represent a value
na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
"BsmtExposure", "BsmtFinType1", "BsmtFinType2",
"FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageYrBlt","GarageCond",
"PoolQC", "Fence", "MiscFeature")
na.is.fine = c("Alley", "MasVnrType", "BsmtQual", "BsmtCond",
"BsmtExposure", "BsmtFinType1", "BsmtFinType2",
"FireplaceQu", "GarageType", "GarageFinish",
"GarageQual", "GarageYrBlt","GarageCond",
"PoolQC", "Fence", "MiscFeature")
knn.output = knnImputation(train %>% select(-c(SalePrice, na.is.fine, Electrical)) %>% as.matrix())  # perform knn imputation.
train %>% select(-c(SalePrice, na.is.fine, Electrical)) %>% glimpse()
select_if(train, is.double())
select_if(train, is.double
)
select_if(train, is.double)
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix())  # perform knn imputation.
?knnImputation
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 5)  # perform knn imputation.
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 1)  # perform knn imputation.
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 100)  # perform knn imputation.
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 5)  # perform knn imputation.
?anyNA
colSums(is.na(train))[colSums(is.na(train)) > 0]
anyNA(knnOutput)
anyNA(knn.output)
colSums(is.na(train))[colSums(is.na(train)) > 0]
knn.output
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 5)$GarageYrBlt
knn.output
knn.output %>% as.tibble()
knn.output %>% as_tibble() %>% select(GarageYrBlt)
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 5)
imputed.GarageYrsBlt = knn.output %>% as_tibble() %>% select(GarageYrBlt)
imputed.GarageYrsBlt
View(imputed.GarageYrsBlt)
View(train$GarageYrBlt)
mutate(train$GarageYrBlt, imputed.GarageYrsBlt)
tibblw(train$GarageYrBlt, imputed.GarageYrsBlt)
tibble(train$GarageYrBlt, imputed.GarageYrsBlt)
tibble(train$GarageYrBlt, imputed.GarageYrsBlt) %>% View()
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 7)
imputed.GarageYrsBlt = knn.output %>% as_tibble() %>% select(GarageYrBlt)
tibble(train$GarageYrBlt, imputed.GarageYrsBlt) %>% View()
train$GarageYrBlt
is.na(train$GarageYrBlt)
train$GarageYrBlt[is.na(train$GarageYrBlt)]
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 7)
imputed.GarageYrsBlt = knn.output %>% as_tibble() %>% select(GarageYrBlt)
train$GarageYrBlt[is.na(train$GarageYrBlt)] = imputed.GarageYrsBlt[is.na(train$GarageYrBlt)]
train$GarageYrBlt[is.na(train$GarageYrBlt)]
mputed.GarageYrsBlt[is.na(train$GarageYrBlt)]
imputed.GarageYrsBlt[is.na(train$GarageYrBlt)]
imputed.GarageYrsBlt
is.na(train$GarageYrBlt)
imputed.GarageYrsBlt[is.na(train$GarageYrBlt),]
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist %>% unname()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist() %>% unname()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist() %>% unname()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% pull()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% unlist() %>% unname()
knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% pull()
knn.output = knnImputation(select_if(train, is.double) %>% select(-SalePrice) %>% as.matrix(), k = 7)
imputed.GarageYrsBlt = knn.output %>% as_tibble() %>% select(GarageYrBlt) %>% pull()
train$GarageYrBlt[is.na(train$GarageYrBlt)] = imputed.GarageYrsBlt[is.na(train$GarageYrBlt)]
